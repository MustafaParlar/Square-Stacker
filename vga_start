

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity vga_start is
 Port ( clk : in  std_logic;
 hsync, vsync: out  std_logic ;
 red,green,blue: out STD_LOGIC_VECTOR(3 downto 0));
end vga_start ;

architecture Behavioral of vga_start is
Signal hpos : integer range 0 to 800 := 0 ;
Signal vpos: integer range 0 to 525 := 0;



type square1c is array (0 to 52,0 to 139) of  std_logic;
signal square1: square1c:= (

"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000011000000000000000000000000000000000000000000000000000000000001110000000000000000000000000000001000000000000000000000000000000",
"00000000000001100111000000000000000000000000000000000000000000000000000000010001110000000000000000000000000011000000000000000000000000000000",
"00000000000011000001000000000000000000000000000000000000000000000000000000100000110000000000000000000000000001000000000000000000000000000000",
"00000000000011000001000000000000000000000000000000000000000000000000000001100000010000100000000000000000000001000000000000000000000000000000",
"00000000000011000000000000000000000000000000000000000000000000000000000001100000000000100000000000000000000001000000000000000000000000000000",
"00000000000011100000000000111010001000010000011110000110110001111000000000111000000001110000111000000111100001000110000011100000101100000000",
"00000000000001111000000011001110001000011000100011001110110010001100000000011100000001100011001100001000110001000110000100110011101100000000",
"00000000000000111110000110000110001000011000100011000110000110001100000000001111000001100011000100011000110001001000001000011001100000000000",
"00000000000000001111000110000110001000011000000011000110000110001100000000000011100001100000001100010000000001010000001000011001100000000000",
"00000000000000000011100100000110001000011000001111000110000100000000000000000001110001100000111100010000000001110000001000000001100000000000",
"00000000000000000001100110000110001000011000110011000110000110000000000000000000110001100001000100010000000001011000011000000001100000000000",
"00000000000010000001100110000110001000011001100011000110000110000000000000000000010001100011000100011000000001001100001000000001100000000000",
"00000000000010000001100110000110001100011001100011000110000111000100000000100000010001100011000100011100010001000100001100001001100000000000",
"00000000000011000011000011101110001101111101110111100110000011111000000000110000100001111011111111001111100011000110000111110001100000000000",
"00000000000000011110000001100110000110010000110011000000000001110000000000001111000000110001100110000111000000000000000011100000000000000000",
"00000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000001110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000001100100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000100010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000100010000000000000000000000000000000000000000000000000000000000100000000000000000010000000000000100000000000000000000000",
"00000000000000000000100010010100001000010010100000101001011000101000001000001000000100000110000001010110001110011110110000000000000000000000",
"00000000000000000000100110010001000101000010000000100001000101001101000101000100000100010011000000000010010010011000100000000000000000000000",
"00000000000000000000100000010001000001100011000000110001000100001101000001000000000100100001000001100010000010011000100000000000000000000000",
"00000000000000000000100000010001000000010001100000011001000100101101000001000000000100110001000000110010010010011000100000000000000000000000",
"00000000000000000000100000010001100100001000100000001001000101001101100001100100000100010001000000010010010010011000100000000000000000000000",
"00000000000000000001110000011000111001110010100000101001101000111100111000111000000110011000000001010011011011011000110000000000000000000000",
"00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
);

begin


process (clk) 
begin
if rising_edge(clk) then
        
    if (hpos = 800) then 
        hpos <= 0;
        if vpos < 525 then 
            vpos <= vpos + 1 ;
        else 
            vpos <= 0; 
        end if;
    else 
        hpos <=hpos + 1;
    end if;

    if (hpos > 16 and hpos < 113) then
        hsync <= '0';
    else 
        hsync <= '1';
    end if; 

    if (vpos > 10 and vpos < 13) then
        vsync <= '1';
    else 
        vsync <= '0';
    end if;
    

    if (hpos >= 200 and hpos < 760 and vpos < 377 and vpos >= 165  ) then
        if square1(((vpos-165)/4),((hpos-220)/4))='1' then
            red <= (others => '1');
            green <= "1100";
            blue <= "1101";
        else 
            red <= (others => '0');
            green <= (others => '0');
            blue <= (others => '0');
        end if;

   
   else 
       red <= (others => '0');
       green <= (others => '0');
       blue <= (others => '0');
       end if;
end if;

end process;

end Behavioral;
